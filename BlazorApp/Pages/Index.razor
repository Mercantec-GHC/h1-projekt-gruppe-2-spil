@page "/"
@page "/{search}"
@inject NavigationManager MyNavigationManager
@using Domain_Models.DataBase;
@using Domain_Models;
@using Microsoft.Data.SqlClient;
@using System.Diagnostics;
@using System.Reflection;

<PageTitle>Index</PageTitle>


@foreach (GameListing listing in gameListings)
{
    foreach (Seller seller in sellers)
    {
        Debug.WriteLine($"listing ID: {listing.listingId}, SellerID: {seller.userId}");
        if (listing.sellerID == seller.userId)
        {
            Debug.WriteLine($"display: listing with listing id = {listing.listingId}, seller id = {listing.sellerID} and sellers user id = {seller.userId}");
            <ShowGamelistings gameListing="listing" seller="seller" />
        }
    }
}


@code {
    List<GameListing> gameListings = new List<GameListing>();
    List<Seller> sellers = new List<Seller>();
    GameListing displayListing = new GameListing();
    Seller seller = new Seller();

    [Parameter]
    public string? search { get; set; }


    private void handleLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {

        makeLists();
        this.StateHasChanged();
    }
    void makeLists()
    {
        gameListings = displayListing.GetGameListings(search);
        sellers = seller.GetSellers(search);
    }

    protected override void OnInitialized()
    {
        makeLists();
        MyNavigationManager.LocationChanged += handleLocationChanged;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

    }
}