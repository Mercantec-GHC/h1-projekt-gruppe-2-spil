@page "/"
@page "/{search}"
@inject NavigationManager MyNavigationManager
@using Domain_Models.DataBase;
@using Domain_Models;
@using Microsoft.Data.SqlClient;
@using System.Diagnostics;
@using System.Reflection;

<PageTitle>Index</PageTitle>


<input @bind="searchYear" class="searchbar" type="text" placeholder="ældste udgivelses år for spil" />
<input @bind="genreSearch" class="searchbar" type="text" placeholder="Søg efter en genre" />

@foreach (GameListing listing in gameListings)
{
    foreach (Seller seller in sellers)
    {
        if (listing.sellerID == seller.userId)
        {
            <ShowGamelistings gameListing="listing" seller="seller" />
        }
    }
}


@code {
    List<GameListing> gameListings = new List<GameListing>();
    List<Seller> sellers = new List<Seller>();
    GameListing displayListing = new GameListing();
    Seller seller = new Seller();

    [Parameter]
    public string? search { get; set; }

    public int searchYear { get; set; }

    public string? genreSearch { get; set; }

    private void handleLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {

        makeLists();
        this.StateHasChanged();
    }
    void makeLists()
    {
        gameListings = displayListing.GetGameListings(search, searchYear, genreSearch);
        sellers = seller.GetSellers();
    }

    protected override void OnInitialized()
    {
        makeLists();
        MyNavigationManager.LocationChanged += handleLocationChanged;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

    }
}